//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {
    public partial class Entity {
        public CreateGeneratorInputComponent createGeneratorInput { get { return (CreateGeneratorInputComponent)GetComponent(CoreComponentIds.CreateGeneratorInput); } }

        public bool hasCreateGeneratorInput { get { return HasComponent(CoreComponentIds.CreateGeneratorInput); } }

        public Entity AddCreateGeneratorInput(int newCost, float newStep, int newFrequency, int newCount) {
            var component = CreateComponent<CreateGeneratorInputComponent>(CoreComponentIds.CreateGeneratorInput);
            component.cost = newCost;
            component.step = newStep;
            component.frequency = newFrequency;
            component.count = newCount;
            return AddComponent(CoreComponentIds.CreateGeneratorInput, component);
        }

        public Entity ReplaceCreateGeneratorInput(int newCost, float newStep, int newFrequency, int newCount) {
            var component = CreateComponent<CreateGeneratorInputComponent>(CoreComponentIds.CreateGeneratorInput);
            component.cost = newCost;
            component.step = newStep;
            component.frequency = newFrequency;
            component.count = newCount;
            ReplaceComponent(CoreComponentIds.CreateGeneratorInput, component);
            return this;
        }

        public Entity RemoveCreateGeneratorInput() {
            return RemoveComponent(CoreComponentIds.CreateGeneratorInput);
        }
    }
}

    public partial class CoreMatcher {
        static IMatcher _matcherCreateGeneratorInput;

        public static IMatcher CreateGeneratorInput {
            get {
                if (_matcherCreateGeneratorInput == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.CreateGeneratorInput);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherCreateGeneratorInput = matcher;
                }

                return _matcherCreateGeneratorInput;
            }
        }
    }
