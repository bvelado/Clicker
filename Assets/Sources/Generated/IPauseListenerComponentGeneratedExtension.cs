//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public class IPauseListenerComponent : IComponent {
    public IPauseListener value;
}

namespace Entitas {
    public partial class Entity {
        public IPauseListenerComponent iPauseListener { get { return (IPauseListenerComponent)GetComponent(UIComponentIds.IPauseListener); } }

        public bool hasIPauseListener { get { return HasComponent(UIComponentIds.IPauseListener); } }

        public Entity AddIPauseListener(IPauseListener newValue) {
            var component = CreateComponent<IPauseListenerComponent>(UIComponentIds.IPauseListener);
            component.value = newValue;
            return AddComponent(UIComponentIds.IPauseListener, component);
        }

        public Entity ReplaceIPauseListener(IPauseListener newValue) {
            var component = CreateComponent<IPauseListenerComponent>(UIComponentIds.IPauseListener);
            component.value = newValue;
            ReplaceComponent(UIComponentIds.IPauseListener, component);
            return this;
        }

        public Entity RemoveIPauseListener() {
            return RemoveComponent(UIComponentIds.IPauseListener);
        }
    }
}

    public partial class UIMatcher {
        static IMatcher _matcherIPauseListener;

        public static IMatcher IPauseListener {
            get {
                if (_matcherIPauseListener == null) {
                    var matcher = (Matcher)Matcher.AllOf(UIComponentIds.IPauseListener);
                    matcher.componentNames = UIComponentIds.componentNames;
                    _matcherIPauseListener = matcher;
                }

                return _matcherIPauseListener;
            }
        }
    }
